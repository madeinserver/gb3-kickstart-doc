<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>egmSpark::IPhysXKinematicCollisionCallback</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">egmSpark::IPhysXKinematicCollisionCallback</p>


<p class="NDLRefHeaderFile">&lt;PhysXKinematicController.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classegm_spark_1_1_i_phys_x_kinematic_collision_callback.gif" alt="Inheritance graph for egmSpark::IPhysXKinematicCollisionCallback"/>
  <p class="FigureCaption">Inheritance graph for egmSpark::IPhysXKinematicCollisionCallback</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">This controller is used to move simple Kinematic PhysX objects in the world. </p>
<p class="NDLNormal">Has collision callbacks that user of this object can implement </p>

<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classegm_spark_1_1_i_phys_x_kinematic_collision_callback_1a4afd8c9b88b035bf8d34757f74937939"></a>
<p class="NDLRefMemberFunction">virtual ~IPhysXKinematicCollisionCallback()</p>
<p class="NDLRefMemberDescription">Destructor. </p>

<a name="classegm_spark_1_1_i_phys_x_kinematic_collision_callback_1a35e3d174d459cf8acde01d4b395286d4"></a>
<p class="NDLRefMemberFunction">virtual bool  OnHit(<br/>NxSweepQueryHit* pHit, <br/>NxVec3& newPos) = 0</p>
<p class="NDLRefMemberDescription">A callback that is executed when the actor is hit. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">pHit</span></td>
    <td>ThePhysX SweepQueryHit object that contains information about the collision. </td>
</tr>
<tr>
    <td><span class="NDLSystemFont">newPos</span></td>
    <td>The position of the hit. The callback can change this value if needed. </td>
</tr>
<tr>
    <td><em>Return Value</em></td>
    <td>False if no more callbacks are required for this collision instance. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_spark_1_1_i_phys_x_kinematic_collision_callback_1a853186f9fe88c15d1c060ced206acd52"></a>
<p class="NDLRefMemberFunction">virtual bool  IsValidHit(NxSweepQueryHit* pHit) = 0</p>
<p class="NDLRefMemberDescription">Checks whether the hit is one that we care about. </p>
<p class="NDLRefMemberDetailedDescription">Implemented in derived classes. </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>True if the hit is valid, false otherwise. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>
