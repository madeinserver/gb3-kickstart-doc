<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
 "http://www.w3.org/TR/html4/loose.dtd">

<html>
<head>

<title>egmSpark::SparkServiceManager</title>
<!--(Begin Meta)================================================================================-->

<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta name="Originator" content="Expedition" />
<meta name="Generator" content="DoxyConvert by Emergent Game Technologies - http://emergent.net" />

<meta name="Last-Updated" content="%lastupdated%" />

<!--(End Meta)==================================================================================-->
    
<!--(Begin Links)===============================================================================-->

<link rel="stylesheet" href="../../shared/Emergent.css" type="text/css" />

<!--(End Links)=================================================================================-->

</head>
  
<!--(Body)======================================================================================-->
<body lang="EN-US">
<script src="../../shared/NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(2);</script>

<p class="NDLRefHeadClassTitle">egmSpark::SparkServiceManager</p>
<p class="NDLRefParentage">: public ServiceManager</p>


<p class="NDLRefHeaderFile">&lt;LightSpeedExtensions.h&gt;</p>

<p class="NDLRefHead1" style="text-align: center; ">
<div class="FigureContainer">
  <img src="./images/classegm_spark_1_1_spark_service_manager.gif" alt="Inheritance graph for egmSpark::SparkServiceManager"/>
  <p class="FigureCaption">Inheritance graph for egmSpark::SparkServiceManager</p>
</div>
</p>

<p class="NDLRefHead1">Description</p>
<p class="NDLNormal">We are overloading the standard ServiceManager so we can track the total time that the service manager itself is using when updating all services. </p>

<a name="public_static_methods"></a>
<p class="NDLRefHead1">Public Static Methods</p>


<a name="classegm_spark_1_1_spark_service_manager_1adf585c1c5ef72c910f59dfb1a5b90014"></a>
<p class="NDLRefMemberFunction">static <span class="NDLSystemFont">SparkServiceManager</span>*  GetInstance()</p>
<p class="NDLRefMemberDescription">Provides access to the service manager singleton. </p>
<p class="NDLRefMemberDetailedDescription"></p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>The singleton pointer. </td>
</tr>

        </tbody>
    </table>
</div>


<a name="public_methods"></a>
<p class="NDLRefHead1">Public Methods</p>


<a name="classegm_spark_1_1_spark_service_manager_1a0823d490156ca8d568cbae2ff945ed63"></a>
<p class="NDLRefMemberFunction">SparkServiceManager()</p>
<p class="NDLRefMemberDescription">Constructor. </p>

<a name="classegm_spark_1_1_spark_service_manager_1adcb5063dab3d9a6d136c269b37d23191"></a>
<p class="NDLRefMemberFunction">~SparkServiceManager()</p>
<p class="NDLRefMemberDescription">Destructor. </p>

<a name="classegm_spark_1_1_spark_service_manager_1a0e5b8cc668c4b5bb49161ed4951f93d1"></a>
<p class="NDLRefMemberFunction">virtual void  TickServices()</p>
<p class="NDLRefMemberDescription">This is an overloaded virtual function from <span class="NDLSystemFont">efd::ServiceManager</span>. </p>
<p class="NDLRefMemberDetailedDescription">It loops through the list of registered services and ticks each service in turn from the highest priority to the lowest priority. </p>

<a name="classegm_spark_1_1_spark_service_manager_1a5d5e594496e6283d15861921f709c15d"></a>
<p class="NDLRefMemberFunction">virtual void  SetMaxFrameRate(efd::Float32 framesPerSec)</p>
<p class="NDLRefMemberDescription">Sets the maximum frame rate that the application will run. </p>
<p class="NDLRefMemberDetailedDescription">If rendering occurs faster than this maximum, time will be yielded back to the OS. </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><span class="NDLSystemFont">framesPerSec</span></td>
    <td>The new maximum frame rate. </td>
</tr>

        </tbody>
    </table>
</div>



<a name="classegm_spark_1_1_spark_service_manager_1a8589133a085ec25a31fc2bd145716578"></a>
<p class="NDLRefMemberFunction">virtual efd::Float32  GetMaxFrameRate()</p>
<p class="NDLRefMemberDescription">Gets the maximum frame rate that the application will run. </p>
<p class="NDLRefMemberDetailedDescription">If rendering occurs faster than this maximum, time will be yielded back to the OS. </p>
<!--(Table)=====================================================================================-->
<div class="ReferenceTable">
    <table>
        <thead>
            <tr>
                <th>Parameter</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>  
<tr>
    <td><em>Return Value</em></td>
    <td>framesPerSec The current maximum frame rate. </td>
</tr>

        </tbody>
    </table>
</div>


 
<!--kadov_tag{{<placeholder id="footer">}}-->

</body>

</html>
